{"swagger":"2.0","info":{"title":"Nomad","description":"API for robika.dyndns.org","version":"0.0.2"},"host":"robika.dyndns.org:4646","basePath":"/v1","schemes":["http"],"paths":{"/job/":{"post":{"tags":["Job"],"description":"Registers a new job or updates an existing job.","operationId":"create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"Job","in":"body","description":"The JSON definition of the job.","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Job"}}},{"name":"region","in":"query","description":"Cross-Region Request","required":false,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/CreateJobResponse"},"examples":{"application/json":{"EvalID":"d092fdc0-e1fd-2536-67d8-43af8ca798ac","EvalCreateIndex":35,"JobModifyIndex":34}}}},"security":[]}},"/jobs":{"post":{"tags":["Jobs"],"summary":"Registers a new job.","description":"Registers a new job.","operationId":"create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"ParameterizedJob","in":"body","description":"The Job object","required":true,"schema":{"$ref":"#/definitions/ParameterizedJob"}},{"name":"stale","in":"query","description":"Consistency Mode","required":false,"default":"default","type":"string","x-example":"stale"},{"name":"region","in":"query","description":"Cross-Region Request","required":false,"type":"string","x-example":""},{"name":"pretty","in":"query","description":"Formatted JSON Output","required":false,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/CreateJobsResponse"},"examples":{"application/json":{"EvalID":"d092fdc0-e1fd-2536-67d8-43af8ca798ac","EvalCreateIndex":35,"JobModifyIndex":34}}}},"security":[]},"get":{"tags":["Jobs"],"summary":"Lists all the jobs registered with Nomad.","description":"Lists all the jobs registered with Nomad.","operationId":"get","produces":["application/json"],"parameters":[{"name":"prefix","in":"query","description":"Filter jobs based on an identifier prefix.","required":false,"type":"string","x-example":""},{"name":"stale","in":"query","description":"Consistency Mode","required":false,"type":"string","x-example":""},{"name":"region","in":"query","description":"Cross-Region Request","required":false,"type":"string","x-example":""},{"name":"pretty","in":"query","description":"Formatted JSON Output","required":false,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Jobs"}},"examples":{"application/json":[{"ID":"binstore-storagelocker","Name":"binstore-storagelocker","Type":"service","Priority":50,"Status":"","StatusDescription":"","CreateIndex":14,"ModifyIndex":14}]}}},"security":[]}},"/job/{id}/evaluate":{"put":{"tags":["Job"],"description":"Creates a new evaluation for the given job.","operationId":"createEvaluation","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"ID","required":true,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/JobCreateEvaluationResponse"},"examples":{"application/json":{"EvalID":"d092fdc0-e1fd-2536-67d8-43af8ca798ac","EvalCreateIndex":35,"JobModifyIndex":34}}}},"security":[]}},"/job/{id}/dispatch":{"put":{"tags":["Job"],"description":"Dispatch a new instance of a parameterized job.","operationId":"dispatch","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"ID","required":true,"type":"string","x-example":""},{"name":"Payload","in":"formData","description":"A []byte array encoded as a base64 string with a maximum size of 16KiB.","required":false,"type":"string","x-example":""},{"name":"Meta","in":"formData","description":"A map[string]string of metadata keys to their values.","required":false,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/JobDispatchResponse"},"examples":{"application/json":{"Index":13,"JobCreateIndex":12,"EvalCreateIndex":13,"EvalID":"e5f55fac-bc69-119d-528a-1fc7ade5e02c","DispatchedJobID":"example/dispatch-1485408778-81644024"}}}},"security":[]}},"/job/{id}/periodic/force":{"put":{"tags":["Job"],"description":"Forces a new instance of the periodic job. A new instance will be created even if it violates the job's prohibit_overlap settings. As such, this should be only used to immediately run a periodic job.","operationId":"forcePeriodic","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"ID","required":true,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/JobForcePeriodicResponse"},"examples":{"application/json":{"EvalCreateIndex":7,"EvalID":"57983ddd-7fcf-3e3a-fd24-f699ccfb36f4"}}}},"security":[]}},"/job/{id}":{"get":{"tags":["Job"],"description":"Query a single job for its specification and status.","operationId":"get","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"ID","required":true,"type":"string","x-example":""},{"name":"stale","in":"query","description":"Consistency Mode","required":false,"type":"string","x-example":""},{"name":"region","in":"query","description":"Cross-Region Request","required":false,"type":"string","x-example":""},{"name":"pretty","in":"query","description":"Formatted JSON Output","required":false,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/GetJobResponse"},"examples":{"application/json":{"Region":"global","ID":"binstore-storagelocker","Name":"binstore-storagelocker","Type":"service","Priority":50,"AllAtOnce":false,"Datacenters":["us2","eu1"],"Constraints":[{"LTarget":"${attr.kernel.os}","RTarget":"windows","Operand":"="}],"TaskGroups":[{"Name":"binsl","Count":5,"Constraints":[{"LTarget":"${attr.kernel.os}","RTarget":"linux","Operand":"="}],"Tasks":[{"Name":"binstore","Driver":"docker","Config":{"image":"hashicorp/binstore"},"Constraints":null,"Resources":{"CPU":500,"MemoryMB":0,"DiskMB":0,"IOPS":0,"Networks":[{"Device":"","CIDR":"","IP":"","MBits":100,"ReservedPorts":null,"DynamicPorts":null}]},"Meta":null},{"Name":"storagelocker","Driver":"java","Config":{"image":"hashicorp/storagelocker"},"Constraints":[{"LTarget":"${attr.kernel.arch}","RTarget":"amd64","Operand":"="}],"Resources":{"CPU":500,"MemoryMB":0,"DiskMB":0,"IOPS":0,"Networks":null},"Meta":null}],"Meta":{"elb_checks":"3","elb_interval":"10","elb_mode":"tcp"}}],"Update":{"Stagger":0,"MaxParallel":0},"Meta":{"foo":"bar"},"Status":"","StatusDescription":"","CreateIndex":14,"ModifyIndex":14}}}},"security":[]},"delete":{"tags":["Job"],"description":"Deregisters a job, and stops all allocations part of it.","operationId":"remove","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"ID","required":true,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/JobRemoveResponse"},"examples":{"application/json":{"EvalID":"d092fdc0-e1fd-2536-67d8-43af8ca798ac","EvalCreateIndex":35,"JobModifyIndex":34}}}},"security":[]},"put":{"tags":["Job"],"description":"Registers a new job or updates an existing job.","operationId":"update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"ID","required":true,"type":"string","x-example":""},{"name":"Job","in":"body","description":"The JSON definition of the job.","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/Job"}}},{"name":"region","in":"query","description":"Cross-Region Request","required":false,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/CreateJobResponse"},"examples":{"application/json":{"EvalID":"d092fdc0-e1fd-2536-67d8-43af8ca798ac","EvalCreateIndex":35,"JobModifyIndex":34}}}},"security":[]}},"/job/{id}/allocations":{"get":{"tags":["Job"],"description":"Query the allocations belonging to a single job.Get allocations","operationId":"getAllocations","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"ID","required":true,"type":"string","x-example":""},{"name":"all","in":"query","description":"Returns all allocations of job with the given ID including those from past instances of the job.","required":false,"type":"string","x-example":""},{"name":"stale","in":"query","description":"Consistency Mode","required":false,"type":"string","x-example":""},{"name":"region","in":"query","description":"Cross-Region Request","required":false,"type":"string","x-example":""},{"name":"pretty","in":"query","description":"Formatted JSON Output","required":false,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/GetJobAllocationsResponse"}},"examples":{"application/json":[{"ID":"3575ba9d-7a12-0c96-7b28-add168c67984","EvalID":"151accaa-1ac6-90fe-d427-313e70ccbb88","Name":"binstore-storagelocker.binsl[0]","NodeID":"a703c3ca-5ff8-11e5-9213-970ee8879d1b","JobID":"binstore-storagelocker","TaskGroup":"binsl","DesiredStatus":"run","DesiredDescription":"","ClientStatus":"running","ClientDescription":"","CreateIndex":16,"ModifyIndex":16}]}}},"security":[]}},"/job/{id}/evaluations":{"get":{"tags":["Job"],"description":"Query the evaluations belonging to a single job.","operationId":"getEvaluations","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"ID","required":true,"type":"string","x-example":""},{"name":"region","in":"query","description":"Cross-Region Request","required":false,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/GetJobEvaluationsResponse"}},"examples":{"application/json":[{"ID":"151accaa-1ac6-90fe-d427-313e70ccbb88","Priority":50,"Type":"service","TriggeredBy":"job-register","JobID":"binstore-storagelocker","JobModifyIndex":14,"NodeID":"","NodeModifyIndex":0,"Status":"complete","StatusDescription":"","Wait":0,"NextEval":"","PreviousEval":"","CreateIndex":15,"ModifyIndex":17}]}}},"security":[]}},"/job/{id}/summary":{"get":{"tags":["Job"],"description":"Query the summary of a job.","operationId":"getSummary","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"ID","required":true,"type":"string","x-example":""},{"name":"region","in":"query","description":"Cross-Region Request","required":false,"type":"string","x-example":""}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/GetJobSummaryResponse"},"examples":{"application/json":{"JobID":"example","Children":{"Dead":0,"Running":7,"Pending":2},"Summary":{"cache":{"Queued":0,"Complete":0,"Failed":0,"Running":1,"Starting":0,"Lost":0}},"CreateIndex":6,"ModifyIndex":10}}}},"security":[]}}},"definitions":{"JobRemoveResponse":{"description":"Model for JobRemoveResponse","required":["EvalCreateIndex"],"properties":{"EvalCreateIndex":{"type":"integer","format":"int32","x-example":"35"},"EvalID":{"type":"string","x-example":"d092fdc0-e1fd-2536-67d8-43af8ca798ac"},"JobModifyIndex":{"type":"integer","format":"int32","x-example":"34"}}},"JobForcePeriodicResponse":{"description":"Model for JobForcePeriodicResponse","required":["EvalCreateIndex"],"properties":{"EvalCreateIndex":{"type":"integer","format":"int32","x-example":"7"},"EvalID":{"type":"string","x-example":"57983ddd-7fcf-3e3a-fd24-f699ccfb36f4"}}},"JobCreateEvaluationResponse":{"description":"Model for JobCreateEvaluationResponse","required":["EvalCreateIndex"],"properties":{"EvalCreateIndex":{"type":"integer","format":"int32","x-example":"35"},"EvalID":{"type":"string","x-example":"d092fdc0-e1fd-2536-67d8-43af8ca798ac"},"JobModifyIndex":{"type":"integer","format":"int32","x-example":"34"}}},"JobDispatchResponse":{"description":"Model for JobDispatchResponse","required":["DispatchedJobID"],"properties":{"DispatchedJobID":{"type":"string","x-example":"example/dispatch-1485408778-81644024"},"EvalCreateIndex":{"type":"integer","format":"int32","x-example":"13"},"EvalID":{"type":"string","x-example":"e5f55fac-bc69-119d-528a-1fc7ade5e02c"},"Index":{"type":"integer","format":"int32","x-example":"13"},"JobCreateIndex":{"type":"integer","format":"int32","x-example":"12"}}},"GetJobResponse":{"description":"Model for GetJobResponse","required":["AllAtOnce"],"properties":{"AllAtOnce":{"type":"boolean","x-example":"false"},"Constraints":{"type":"array","items":{"$ref":"#/definitions/Constraint"},"x-example":"[\r\n  {\r\n    \"LTarget\": \"${attr.kernel.os}\",\r\n    \"RTarget\": \"windows\",\r\n    \"Operand\": \"=\"\r\n  }\r\n]"},"CreateIndex":{"type":"integer","format":"int32","x-example":"14"},"Datacenters":{"type":"array","items":{"type":"string"},"x-example":"[\"us2\", \"eu1\"]"},"ID":{"type":"string","x-example":"binstore-storagelocker"},"Meta":{"type":"array","items":{"type":"string"},"x-example":"{\r\n  \"foo\": \"bar\"\r\n}"},"ModifyIndex":{"type":"integer","format":"int32","x-example":"14"},"Name":{"type":"string","x-example":"binstore-storagelocker"},"Priority":{"type":"integer","format":"int32","x-example":"50"},"Region":{"type":"string","x-example":"global"},"Status":{"type":"string","x-example":""},"StatusDescription":{"type":"string","x-example":""},"TaskGroups":{"type":"array","items":{"$ref":"#/definitions/TaskGroup"},"x-example":"[\r\n  {\r\n    \"Name\": \"binsl\",\r\n    \"Count\": 5,\r\n    \"Constraints\": [\r\n      {\r\n        \"LTarget\": \"${attr.kernel.os}\",\r\n        \"RTarget\": \"linux\",\r\n        \"Operand\": \"=\"\r\n      }\r\n    ],\r\n    \"Tasks\": [\r\n      {\r\n        \"Name\": \"binstore\",\r\n        \"Driver\": \"docker\",\r\n        \"Config\": {\r\n          \"image\": \"hashicorp/binstore\"\r\n        },\r\n        \"Constraints\": null,\r\n        \"Resources\": {\r\n          \"CPU\": 500,\r\n          \"MemoryMB\": 0,\r\n          \"DiskMB\": 0,\r\n          \"IOPS\": 0,\r\n          \"Networks\": [\r\n            {\r\n              \"Device\": \"\",\r\n              \"CIDR\": \"\",\r\n              \"IP\": \"\",\r\n              \"MBits\": 100,\r\n              \"ReservedPorts\": null,\r\n              \"DynamicPorts\": null\r\n            }\r\n          ]\r\n        },\r\n        \"Meta\": null\r\n      },\r\n      {\r\n        \"Name\": \"storagelocker\",\r\n        \"Driver\": \"java\",\r\n        \"Config\": {\r\n          \"image\": \"hashicorp/storagelocker\"\r\n        },\r\n        \"Constraints\": [\r\n          {\r\n            \"LTarget\": \"${attr.kernel.arch}\",\r\n            \"RTarget\": \"amd64\",\r\n            \"Operand\": \"=\"\r\n          }\r\n        ],\r\n        \"Resources\": {\r\n          \"CPU\": 500,\r\n          \"MemoryMB\": 0,\r\n          \"DiskMB\": 0,\r\n          \"IOPS\": 0,\r\n          \"Networks\": null\r\n        },\r\n        \"Meta\": null\r\n      }\r\n    ],\r\n    \"Meta\": {\r\n      \"elb_checks\": \"3\",\r\n      \"elb_interval\": \"10\",\r\n      \"elb_mode\": \"tcp\"\r\n    }\r\n  }\r\n]"},"Type":{"type":"string","x-example":"service"},"Update":{"$ref":"#/definitions/UpdateStrategy","x-example":"{\r\n  \"Stagger\": 0,\r\n  \"MaxParallel\": 0\r\n}"}}},"ReservedPort":{"description":"Model for ReservedPorts","required":["Label"],"properties":{"Label":{"type":"string","x-example":"rpc"},"Value":{"type":"integer","format":"int32","x-example":"25566"}}},"Network":{"description":"Model for Networks","required":["CIDR"],"properties":{"CIDR":{"type":"string","x-example":""},"Device":{"type":"string","x-example":""},"DynamicPorts":{"type":"array","items":{"$ref":"#/definitions/ReservedPort"},"x-example":"[\r\n  {\r\n    \"Label\": \"db\"\r\n  }\r\n]"},"IP":{"type":"string","x-example":""},"MBits":{"minimum":1.0,"type":"integer","format":"int32","x-example":"10"},"ReservedPorts":{"type":"array","items":{"$ref":"#/definitions/ReservedPort"},"x-example":"[\r\n  {\r\n    \"Label\": \"rpc\",\r\n    \"Value\": 25566\r\n  }\r\n]"}}},"Resources":{"description":"Model for Resources","required":["CPU"],"properties":{"CPU":{"minimum":1.0,"type":"integer","format":"int32","x-example":"500"},"DiskMB":{"minimum":1.0,"type":"integer","format":"int32","x-example":"300"},"IOPS":{"maximum":1000.0,"minimum":10.0,"type":"integer","format":"int32","x-example":"0"},"MemoryMB":{"type":"integer","format":"int32","x-example":"256"},"Networks":{"type":"array","items":{"$ref":"#/definitions/Network"},"x-example":"[\r\n  {\r\n    \"ReservedPorts\": [\r\n      {\r\n        \"Label\": \"rpc\",\r\n        \"Value\": 25566\r\n      }\r\n    ],\r\n    \"DynamicPorts\": [\r\n      {\r\n        \"Label\": \"db\"\r\n      }\r\n    ],\r\n    \"MBits\": 10\r\n  }\r\n]"}}},"Task":{"description":"Model for Tasks","required":["Driver","Name"],"properties":{"Artifacts":{"type":"array","items":{"$ref":"#/definitions/Artifact"},"x-example":"[\r\n  {\r\n    \"GetterSource\": \"http://foo.com/artifact.tar.gz\",\r\n    \"GetterOptions\": {\r\n      \"checksum\": \"md5:c4aa853ad2215426eb7d70a21922e794\"\r\n    },\r\n    \"RelativeDest\": \"local/\"\r\n  }\r\n]"},"Config":{"type":"array","items":{"type":"string"},"x-example":"{\r\n  \"image\": \"redis:latest\",\r\n  \"port_map\": [\r\n    {\r\n      \"db\": 6379\r\n    }\r\n  ]\r\n}"},"Constraints":{"type":"array","items":{"$ref":"#/definitions/Constraint"},"x-example":""},"DispatchPayload":{"$ref":"#/definitions/DispatchPayload","x-example":"{\r\n  \"File\": \"config.json\"\r\n}"},"Driver":{"enum":["docker","exec","java","lxc","qemu","raw_exec","rkt"],"type":"string","x-example":"docker"},"Env":{"$ref":"#/definitions/Env","x-example":"{\r\n  \"foo\": \"bar\",\r\n  \"baz\": \"pipe\"\r\n}"},"KillTimeout":{"minimum":1.0,"type":"integer","format":"int64","x-example":"5000000000"},"leader":{"type":"boolean","x-example":""},"LogConfig":{"$ref":"#/definitions/LogConfig","x-example":"{\r\n  \"MaxFiles\": 10,\r\n  \"MaxFileSizeMB\": 10\r\n}"},"Meta":{"type":"array","items":{"type":"string"},"x-example":"{\r\n  \"foo\": \"bar\",\r\n  \"baz\": \"pipe\"\r\n}"},"Name":{"type":"string","x-example":"redis"},"Resources":{"$ref":"#/definitions/Resources","x-example":"{\r\n  \"CPU\": 500,\r\n  \"MemoryMB\": 256,\r\n  \"DiskMB\": 300,\r\n  \"IOPS\": 0,\r\n  \"Networks\": [\r\n    {\r\n      \"ReservedPorts\": [\r\n        {\r\n          \"Label\": \"rpc\",\r\n          \"Value\": 25566\r\n        }\r\n      ],\r\n      \"DynamicPorts\": [\r\n        {\r\n          \"Label\": \"db\"\r\n        }\r\n      ],\r\n      \"MBits\": 10\r\n    }\r\n  ]\r\n}"},"Services":{"type":"array","items":{"$ref":"#/definitions/Service"},"x-example":"[\r\n  {\r\n    \"Name\": \"cache-redis\",\r\n    \"Tags\": [\r\n      \"global\",\r\n      \"cache\"\r\n    ],\r\n    \"PortLabel\": \"db\",\r\n    \"Checks\": [\r\n      {\r\n        \"Id\": \"\",\r\n        \"Name\": \"alive\",\r\n        \"Type\": \"tcp\",\r\n        \"Command\": \"\",\r\n        \"Args\": null,\r\n        \"Path\": \"\",\r\n        \"Protocol\": \"\",\r\n        \"Interval\": 10000000000,\r\n        \"Timeout\": 2000000000\r\n      }\r\n    ]\r\n  }\r\n]"},"Templates":{"type":"array","items":{"$ref":"#/definitions/Template"},"x-example":"[\r\n  {\r\n    \"SourcePath\": \"local/config.conf.tpl\",\r\n    \"DestPath\": \"local/config.conf\",\r\n    \"EmbeddedTmpl\": \"\",\r\n    \"ChangeMode\": \"signal\",\r\n    \"ChangeSignal\": \"SIGUSR1\",\r\n    \"Splay\": 5000000000\r\n  }\r\n]"},"User":{"type":"string","x-example":"foo-user"},"Vault":{"$ref":"#/definitions/Vault","x-example":"{\r\n  \"Policies\": [\r\n    \"policy-name\"\r\n  ],\r\n  \"Env\": true,\r\n  \"ChangeMode\": \"restart\",\r\n  \"ChangeSignal\": \"\"\r\n}"}}},"Artifact":{"description":"Nomad downloads artifacts using go-getter. The go-getter library allows downloading of artifacts from various sources using a URL as the input source. The key-value pairs given in the options block map directly to parameters appended to the supplied source URL. Nomad allows downloading http, https, and S3 artifacts. If these artifacts are archives (zip, tar.gz, bz2, etc.), these will be unarchived before the task is started.","required":["GetterOptions"],"properties":{"GetterOptions":{"type":"array","items":{"type":"string"},"x-example":"{\r\n  \"checksum\": \"md5:c4aa853ad2215426eb7d70a21922e794\"\r\n}"},"GetterSource":{"type":"string","x-example":"http://foo.com/artifact.tar.gz"},"RelativeDest":{"type":"string","x-example":"local/"}}},"Template":{"description":"The Template block instantiates an instance of a template renderer. This creates a convenient way to ship configuration files that are populated from environment variables, Consul data, Vault secrets, or just general configurations within a Nomad task.","required":["ChangeMode"],"properties":{"ChangeMode":{"enum":["noop","restart","signal"],"type":"string","x-example":"signal"},"ChangeSignal":{"type":"string","x-example":"SIGUSR1"},"DestPath":{"type":"string","x-example":"local/config.conf"},"EmbeddedTmpl":{"type":"string","x-example":""},"LeftDelim":{"type":"string","x-example":"{{"},"Perms":{"type":"string","x-example":""},"RightDelim":{"type":"string","x-example":"}}"},"SourcePath":{"type":"string","x-example":"local/config.conf.tpl"},"Splay":{"minimum":1.0,"type":"integer","format":"int64","x-example":"5000000000"}}},"Service":{"description":"Model for Services","required":["Checks"],"properties":{"Checks":{"type":"array","items":{"$ref":"#/definitions/Checks"},"x-example":"[\r\n  {\r\n    \"Id\": \"\",\r\n    \"Name\": \"alive\",\r\n    \"Type\": \"tcp\",\r\n    \"Command\": \"\",\r\n    \"Args\": null,\r\n    \"Path\": \"\",\r\n    \"Protocol\": \"\",\r\n    \"Interval\": 10000000000,\r\n    \"Timeout\": 2000000000\r\n  }\r\n]"},"Name":{"type":"string","x-example":"cache-redis"},"PortLabel":{"type":"string","x-example":"db"},"Tags":{"type":"array","items":{"type":"string"},"x-example":"[\"global\", \"cache\"]"}}},"Job":{"description":"Model for Jobs","required":["Job"],"properties":{"Job":{"$ref":"#/definitions/JobDefinition","x-example":"{\r\n  \"Region\": \"global\",\r\n  \"ID\": \"example\",\r\n  \"Name\": \"example\",\r\n  \"Type\": \"batch\",\r\n  \"Priority\": 50,\r\n  \"AllAtOnce\": false,\r\n  \"Datacenters\": [\r\n    \"dc1\"\r\n  ],\r\n  \"Constraints\": [\r\n    {\r\n      \"LTarget\": \"${attr.kernel.name}\",\r\n      \"RTarget\": \"linux\",\r\n      \"Operand\": \"=\"\r\n    }\r\n  ],\r\n  \"TaskGroups\": [\r\n    {\r\n      \"Name\": \"cache\",\r\n      \"Count\": 1,\r\n      \"Constraints\": null,\r\n      \"Tasks\": [\r\n        {\r\n          \"Name\": \"redis\",\r\n          \"Driver\": \"docker\",\r\n          \"User\": \"foo-user\",\r\n          \"Config\": {\r\n            \"image\": \"redis:latest\",\r\n            \"port_map\": [\r\n              {\r\n                \"db\": 6379\r\n              }\r\n            ]\r\n          },\r\n          \"Constraints\": null,\r\n          \"Env\": {\r\n            \"foo\": \"bar\",\r\n            \"baz\": \"pipe\"\r\n          },\r\n          \"Services\": [\r\n            {\r\n              \"Name\": \"cache-redis\",\r\n              \"Tags\": [\r\n                \"global\",\r\n                \"cache\"\r\n              ],\r\n              \"PortLabel\": \"db\",\r\n              \"Checks\": [\r\n                {\r\n                  \"Id\": \"\",\r\n                  \"Name\": \"alive\",\r\n                  \"Type\": \"tcp\",\r\n                  \"Command\": \"\",\r\n                  \"Args\": null,\r\n                  \"Path\": \"\",\r\n                  \"Protocol\": \"\",\r\n                  \"Interval\": 10000000000,\r\n                  \"Timeout\": 2000000000\r\n                }\r\n              ]\r\n            }\r\n          ],\r\n          \"Vault\": {\r\n            \"Policies\": [\r\n              \"policy-name\"\r\n            ],\r\n            \"Env\": true,\r\n            \"ChangeMode\": \"restart\",\r\n            \"ChangeSignal\": \"\"\r\n          },\r\n          \"Resources\": {\r\n            \"CPU\": 500,\r\n            \"MemoryMB\": 256,\r\n            \"DiskMB\": 300,\r\n            \"IOPS\": 0,\r\n            \"Networks\": [\r\n              {\r\n                \"ReservedPorts\": [\r\n                  {\r\n                    \"Label\": \"rpc\",\r\n                    \"Value\": 25566\r\n                  }\r\n                ],\r\n                \"DynamicPorts\": [\r\n                  {\r\n                    \"Label\": \"db\"\r\n                  }\r\n                ],\r\n                \"MBits\": 10\r\n              }\r\n            ]\r\n          },\r\n          \"Meta\": {\r\n            \"foo\": \"bar\",\r\n            \"baz\": \"pipe\"\r\n          },\r\n          \"KillTimeout\": 5000000000,\r\n          \"LogConfig\": {\r\n            \"MaxFiles\": 10,\r\n            \"MaxFileSizeMB\": 10\r\n          },\r\n          \"Templates\": [\r\n            {\r\n              \"SourcePath\": \"local/config.conf.tpl\",\r\n              \"DestPath\": \"local/config.conf\",\r\n              \"EmbeddedTmpl\": \"\",\r\n              \"ChangeMode\": \"signal\",\r\n              \"ChangeSignal\": \"SIGUSR1\",\r\n              \"Splay\": 5000000000\r\n            }\r\n          ],\r\n          \"Artifacts\": [\r\n            {\r\n              \"GetterSource\": \"http://foo.com/artifact.tar.gz\",\r\n              \"GetterOptions\": {\r\n                \"checksum\": \"md5:c4aa853ad2215426eb7d70a21922e794\"\r\n              },\r\n              \"RelativeDest\": \"local/\"\r\n            }\r\n          ],\r\n          \"DispatchPayload\": {\r\n            \"File\": \"config.json\"\r\n          }\r\n        }\r\n      ],\r\n      \"RestartPolicy\": {\r\n        \"Interval\": 300000000000,\r\n        \"Attempts\": 10,\r\n        \"Delay\": 25000000000,\r\n        \"Mode\": \"delay\"\r\n      },\r\n      \"Meta\": {\r\n        \"foo\": \"bar\",\r\n        \"baz\": \"pipe\"\r\n      }\r\n    }\r\n  ],\r\n  \"Update\": {\r\n    \"Stagger\": 10000000000,\r\n    \"MaxParallel\": 1\r\n  },\r\n  \"Periodic\": {\r\n    \"Enabled\": true,\r\n    \"Spec\": \"* * * * *\",\r\n    \"SpecType\": \"cron\",\r\n    \"ProhibitOverlap\": true\r\n  },\r\n  \"Meta\": {\r\n    \"foo\": \"bar\",\r\n    \"baz\": \"pipe\"\r\n  },\r\n  \"ParameterizedJob\": {\r\n    \"Payload\": \"required\",\r\n    \"MetaRequired\": [\r\n      \"foo\"\r\n    ],\r\n    \"MetaOptional\": [\r\n      \"bar\"\r\n    ]\r\n  },\r\n  \"Payload\": null\r\n}"}}},"TaskGroup":{"description":"Model for TaskGroups","required":["Name"],"properties":{"Constraints":{"type":"array","items":{"$ref":"#/definitions/Constraint"},"x-example":""},"Count":{"minimum":1.0,"type":"integer","format":"int32","x-example":"1"},"Meta":{"type":"array","items":{"type":"string"},"x-example":"{\r\n  \"foo\": \"bar\",\r\n  \"baz\": \"pipe\"\r\n}"},"Name":{"type":"string","x-example":"cache"},"RestartPolicy":{"$ref":"#/definitions/RestartPolicy","x-example":"{\r\n  \"Interval\": 300000000000,\r\n  \"Attempts\": 10,\r\n  \"Delay\": 25000000000,\r\n  \"Mode\": \"delay\"\r\n}"},"Tasks":{"type":"array","items":{"$ref":"#/definitions/Task"},"x-example":"[\r\n  {\r\n    \"Name\": \"redis\",\r\n    \"Driver\": \"docker\",\r\n    \"User\": \"foo-user\",\r\n    \"Config\": {\r\n      \"image\": \"redis:latest\",\r\n      \"port_map\": [\r\n        {\r\n          \"db\": 6379\r\n        }\r\n      ]\r\n    },\r\n    \"Constraints\": null,\r\n    \"Env\": {\r\n      \"foo\": \"bar\",\r\n      \"baz\": \"pipe\"\r\n    },\r\n    \"Services\": [\r\n      {\r\n        \"Name\": \"cache-redis\",\r\n        \"Tags\": [\r\n          \"global\",\r\n          \"cache\"\r\n        ],\r\n        \"PortLabel\": \"db\",\r\n        \"Checks\": [\r\n          {\r\n            \"Id\": \"\",\r\n            \"Name\": \"alive\",\r\n            \"Type\": \"tcp\",\r\n            \"Command\": \"\",\r\n            \"Args\": null,\r\n            \"Path\": \"\",\r\n            \"Protocol\": \"\",\r\n            \"Interval\": 10000000000,\r\n            \"Timeout\": 2000000000\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"Vault\": {\r\n      \"Policies\": [\r\n        \"policy-name\"\r\n      ],\r\n      \"Env\": true,\r\n      \"ChangeMode\": \"restart\",\r\n      \"ChangeSignal\": \"\"\r\n    },\r\n    \"Resources\": {\r\n      \"CPU\": 500,\r\n      \"MemoryMB\": 256,\r\n      \"DiskMB\": 300,\r\n      \"IOPS\": 0,\r\n      \"Networks\": [\r\n        {\r\n          \"ReservedPorts\": [\r\n            {\r\n              \"Label\": \"rpc\",\r\n              \"Value\": 25566\r\n            }\r\n          ],\r\n          \"DynamicPorts\": [\r\n            {\r\n              \"Label\": \"db\"\r\n            }\r\n          ],\r\n          \"MBits\": 10\r\n        }\r\n      ]\r\n    },\r\n    \"Meta\": {\r\n      \"foo\": \"bar\",\r\n      \"baz\": \"pipe\"\r\n    },\r\n    \"KillTimeout\": 5000000000,\r\n    \"LogConfig\": {\r\n      \"MaxFiles\": 10,\r\n      \"MaxFileSizeMB\": 10\r\n    },\r\n    \"Templates\": [\r\n      {\r\n        \"SourcePath\": \"local/config.conf.tpl\",\r\n        \"DestPath\": \"local/config.conf\",\r\n        \"EmbeddedTmpl\": \"\",\r\n        \"ChangeMode\": \"signal\",\r\n        \"ChangeSignal\": \"SIGUSR1\",\r\n        \"Splay\": 5000000000\r\n      }\r\n    ],\r\n    \"Artifacts\": [\r\n      {\r\n        \"GetterSource\": \"http://foo.com/artifact.tar.gz\",\r\n        \"GetterOptions\": {\r\n          \"checksum\": \"md5:c4aa853ad2215426eb7d70a21922e794\"\r\n        },\r\n        \"RelativeDest\": \"local/\"\r\n      }\r\n    ],\r\n    \"DispatchPayload\": {\r\n      \"File\": \"config.json\"\r\n    }\r\n  }\r\n]"}}},"JobDefinition":{"description":"Jobs are submitted by users and represent a desired state. A job is a declarative description of tasks to run which are bounded by constraints and require resources.","required":["Datacenters","ID"],"properties":{"AllAtOnce":{"type":"boolean","x-example":"false"},"Constraints":{"type":"array","items":{"$ref":"#/definitions/Constraint"},"x-example":"[\r\n  {\r\n    \"LTarget\": \"${attr.kernel.name}\",\r\n    \"RTarget\": \"linux\",\r\n    \"Operand\": \"=\"\r\n  }\r\n]"},"Datacenters":{"type":"array","items":{"type":"string"},"x-example":"[\"dc1\"]"},"ID":{"type":"string","x-example":"example"},"Meta":{"type":"array","items":{"type":"string"},"x-example":"{\r\n  \"foo\": \"bar\",\r\n  \"baz\": \"pipe\"\r\n}"},"Name":{"type":"string","x-example":"example"},"ParameterizedJob":{"$ref":"#/definitions/ParameterizedJob","x-example":"{\r\n  \"Payload\": \"required\",\r\n  \"MetaRequired\": [\r\n    \"foo\"\r\n  ],\r\n  \"MetaOptional\": [\r\n    \"bar\"\r\n  ]\r\n}"},"Payload":{"type":"string","x-example":""},"Periodic":{"$ref":"#/definitions/Periodic","x-example":"{\r\n  \"Enabled\": true,\r\n  \"Spec\": \"* * * * *\",\r\n  \"SpecType\": \"cron\",\r\n  \"ProhibitOverlap\": true\r\n}"},"Priority":{"maximum":100.0,"minimum":1.0,"type":"integer","format":"int32","x-example":"50"},"Region":{"type":"string","x-example":"global"},"TaskGroups":{"type":"array","items":{"$ref":"#/definitions/TaskGroup"},"x-example":"[\r\n  {\r\n    \"Name\": \"cache\",\r\n    \"Count\": 1,\r\n    \"Constraints\": null,\r\n    \"Tasks\": [\r\n      {\r\n        \"Name\": \"redis\",\r\n        \"Driver\": \"docker\",\r\n        \"User\": \"foo-user\",\r\n        \"Config\": {\r\n          \"image\": \"redis:latest\",\r\n          \"port_map\": [\r\n            {\r\n              \"db\": 6379\r\n            }\r\n          ]\r\n        },\r\n        \"Constraints\": null,\r\n        \"Env\": {\r\n          \"foo\": \"bar\",\r\n          \"baz\": \"pipe\"\r\n        },\r\n        \"Services\": [\r\n          {\r\n            \"Name\": \"cache-redis\",\r\n            \"Tags\": [\r\n              \"global\",\r\n              \"cache\"\r\n            ],\r\n            \"PortLabel\": \"db\",\r\n            \"Checks\": [\r\n              {\r\n                \"Id\": \"\",\r\n                \"Name\": \"alive\",\r\n                \"Type\": \"tcp\",\r\n                \"Command\": \"\",\r\n                \"Args\": null,\r\n                \"Path\": \"\",\r\n                \"Protocol\": \"\",\r\n                \"Interval\": 10000000000,\r\n                \"Timeout\": 2000000000\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        \"Vault\": {\r\n          \"Policies\": [\r\n            \"policy-name\"\r\n          ],\r\n          \"Env\": true,\r\n          \"ChangeMode\": \"restart\",\r\n          \"ChangeSignal\": \"\"\r\n        },\r\n        \"Resources\": {\r\n          \"CPU\": 500,\r\n          \"MemoryMB\": 256,\r\n          \"DiskMB\": 300,\r\n          \"IOPS\": 0,\r\n          \"Networks\": [\r\n            {\r\n              \"ReservedPorts\": [\r\n                {\r\n                  \"Label\": \"rpc\",\r\n                  \"Value\": 25566\r\n                }\r\n              ],\r\n              \"DynamicPorts\": [\r\n                {\r\n                  \"Label\": \"db\"\r\n                }\r\n              ],\r\n              \"MBits\": 10\r\n            }\r\n          ]\r\n        },\r\n        \"Meta\": {\r\n          \"foo\": \"bar\",\r\n          \"baz\": \"pipe\"\r\n        },\r\n        \"KillTimeout\": 5000000000,\r\n        \"LogConfig\": {\r\n          \"MaxFiles\": 10,\r\n          \"MaxFileSizeMB\": 10\r\n        },\r\n        \"Templates\": [\r\n          {\r\n            \"SourcePath\": \"local/config.conf.tpl\",\r\n            \"DestPath\": \"local/config.conf\",\r\n            \"EmbeddedTmpl\": \"\",\r\n            \"ChangeMode\": \"signal\",\r\n            \"ChangeSignal\": \"SIGUSR1\",\r\n            \"Splay\": 5000000000\r\n          }\r\n        ],\r\n        \"Artifacts\": [\r\n          {\r\n            \"GetterSource\": \"http://foo.com/artifact.tar.gz\",\r\n            \"GetterOptions\": {\r\n              \"checksum\": \"md5:c4aa853ad2215426eb7d70a21922e794\"\r\n            },\r\n            \"RelativeDest\": \"local/\"\r\n          }\r\n        ],\r\n        \"DispatchPayload\": {\r\n          \"File\": \"config.json\"\r\n        }\r\n      }\r\n    ],\r\n    \"RestartPolicy\": {\r\n      \"Interval\": 300000000000,\r\n      \"Attempts\": 10,\r\n      \"Delay\": 25000000000,\r\n      \"Mode\": \"delay\"\r\n    },\r\n    \"Meta\": {\r\n      \"foo\": \"bar\",\r\n      \"baz\": \"pipe\"\r\n    }\r\n  }\r\n]"},"Type":{"enum":["service","system","batch"],"type":"string","x-example":"batch"},"Update":{"$ref":"#/definitions/UpdateStrategy","x-example":"{\r\n  \"Stagger\": 10000000000,\r\n  \"MaxParallel\": 1\r\n}"}}},"UpdateStrategy":{"description":"Specifies the task's update strategy. When omitted, rolling updates are disabled.","required":["MaxParallel"],"properties":{"MaxParallel":{"type":"integer","format":"int32","x-example":"1"},"Stagger":{"type":"integer","format":"int64","x-example":"10000000000"}}},"Constraint":{"description":"Model for Constraints","required":["LTarget"],"properties":{"LTarget":{"type":"string","x-example":""},"Operand":{"enum":["regexp","set_contains","distinct_host","distinct_property","=","==","is","!=","not","\u003E","\u003E=","\u003C","\u003C="],"type":"string","x-example":""},"RTarget":{"type":"string","x-example":""}}},"CreateJobResponse":{"description":"Model for CreateJobResponse","required":["EvalCreateIndex"],"properties":{"EvalCreateIndex":{"type":"integer","format":"int32","x-example":"35"},"EvalID":{"type":"string","x-example":"d092fdc0-e1fd-2536-67d8-43af8ca798ac"},"JobModifyIndex":{"type":"integer","format":"int32","x-example":"34"}}},"GetJobSummaryResponse":{"description":"Model for GetJobSummaryResponse","required":["Children"],"properties":{"Children":{"$ref":"#/definitions/Children","x-example":"{\n  \"Dead\": 0,\n  \"Running\": 7,\n  \"Pending\": 2\n}"},"CreateIndex":{"type":"integer","format":"int32","x-example":"6"},"JobID":{"type":"string","x-example":"example"},"ModifyIndex":{"type":"integer","format":"int32","x-example":"10"},"Summary":{"$ref":"#/definitions/Summary","x-example":"{\n  \"cache\": {\n    \"Queued\": 0,\n    \"Complete\": 0,\n    \"Failed\": 0,\n    \"Running\": 1,\n    \"Starting\": 0,\n    \"Lost\": 0\n  }\n}"}}},"Summary":{"description":"Model for Summary","required":["cache"],"properties":{"cache":{"$ref":"#/definitions/Cache","x-example":"{\n  \"Queued\": 0,\n  \"Complete\": 0,\n  \"Failed\": 0,\n  \"Running\": 1,\n  \"Starting\": 0,\n  \"Lost\": 0\n}"}}},"Cache":{"description":"Model for Cache","required":["Complete"],"properties":{"Complete":{"type":"integer","format":"int32","x-example":"0"},"Failed":{"type":"integer","format":"int32","x-example":"0"},"Lost":{"type":"integer","format":"int32","x-example":"0"},"Queued":{"type":"integer","format":"int32","x-example":"0"},"Running":{"type":"integer","format":"int32","x-example":"1"},"Starting":{"type":"integer","format":"int32","x-example":"0"}}},"Children":{"description":"Model for Children","required":["Dead"],"properties":{"Dead":{"type":"integer","format":"int32","x-example":"0"},"Pending":{"type":"integer","format":"int32","x-example":"2"},"Running":{"type":"integer","format":"int32","x-example":"7"}}},"GetJobEvaluationsResponse":{"description":"Model for GetJobEvaluationsResponse","required":["CreateIndex"],"properties":{"CreateIndex":{"type":"integer","format":"int32","x-example":"15"},"ID":{"type":"string","x-example":"151accaa-1ac6-90fe-d427-313e70ccbb88"},"JobID":{"type":"string","x-example":"binstore-storagelocker"},"JobModifyIndex":{"type":"integer","format":"int32","x-example":"14"},"ModifyIndex":{"type":"integer","format":"int32","x-example":"17"},"NextEval":{"type":"string","x-example":""},"NodeID":{"type":"string","x-example":""},"NodeModifyIndex":{"type":"integer","format":"int32","x-example":"0"},"PreviousEval":{"type":"string","x-example":""},"Priority":{"type":"integer","format":"int32","x-example":"50"},"Status":{"type":"string","x-example":"complete"},"StatusDescription":{"type":"string","x-example":""},"TriggeredBy":{"type":"string","x-example":"job-register"},"Type":{"type":"string","x-example":"service"},"Wait":{"type":"integer","format":"int32","x-example":"0"}}},"GetJobAllocationsResponse":{"description":"Model for GetJobAllocationsResponse","required":["ClientDescription"],"properties":{"ClientDescription":{"type":"string","x-example":""},"ClientStatus":{"type":"string","x-example":"running"},"CreateIndex":{"type":"integer","format":"int32","x-example":"16"},"DesiredDescription":{"type":"string","x-example":""},"DesiredStatus":{"type":"string","x-example":"run"},"EvalID":{"type":"string","x-example":"151accaa-1ac6-90fe-d427-313e70ccbb88"},"ID":{"type":"string","x-example":"3575ba9d-7a12-0c96-7b28-add168c67984"},"JobID":{"type":"string","x-example":"binstore-storagelocker"},"ModifyIndex":{"type":"integer","format":"int32","x-example":"16"},"Name":{"type":"string","x-example":"binstore-storagelocker.binsl[0]"},"NodeID":{"type":"string","x-example":"a703c3ca-5ff8-11e5-9213-970ee8879d1b"},"TaskGroup":{"type":"string","x-example":"binsl"}}},"CreateJobsResponse":{"description":"Model for CreateJobsResponse","required":["EvalCreateIndex"],"properties":{"EvalCreateIndex":{"type":"integer","format":"int32","x-example":"35"},"EvalID":{"type":"string","x-example":"d092fdc0-e1fd-2536-67d8-43af8ca798ac"},"JobModifyIndex":{"type":"integer","format":"int32","x-example":"34"}}},"ParameterizedJob":{"description":"Specifies the job as a paramterized job such that it can be dispatched against.","required":["MetaOptional"],"properties":{"MetaOptional":{"type":"array","items":{"type":"string"},"x-example":"[\"bar\"]"},"MetaRequired":{"type":"array","items":{"type":"string"},"x-example":"[\"foo\"]"},"Payload":{"enum":["optional","required","forbidden"],"type":"string","x-example":"required"}}},"Periodic":{"description":"Periodic allows the job to be scheduled at fixed times, dates or intervals. The periodic expression is always evaluated in the UTC timezone to ensure consistent evaluation when Nomad Servers span multiple time zones.","required":["Enabled"],"properties":{"Enabled":{"type":"boolean","x-example":"true"},"ProhibitOverlap":{"type":"boolean","x-example":"true"},"Spec":{"type":"string","x-example":"* * * * *"},"SpecType":{"enum":["cron"],"type":"string","x-example":"cron"},"time_zone":{"type":"string","x-example":""}}},"RestartPolicy":{"description":"Model for RestartPolicy","required":["Attempts"],"properties":{"Attempts":{"type":"integer","format":"int32","x-example":"10"},"Delay":{"type":"integer","format":"int32","x-example":"25000000000"},"Interval":{"type":"integer","format":"int32","x-example":"300000000000"},"Mode":{"type":"string","x-example":"delay"}}},"DispatchPayload":{"description":"Configures the task to have access to dispatch payloads.","required":["File"],"properties":{"File":{"type":"string","x-example":"config.json"}}},"LogConfig":{"description":"The LogConfig object configures the log rotation policy for a task's stdout and stderr.","required":["MaxFiles"],"properties":{"MaxFiles":{"type":"integer","format":"int32","x-example":"10"},"MaxFileSizeMB":{"type":"integer","format":"int32","x-example":"10"}}},"Vault":{"description":"Model for Vault","required":["ChangeMode"],"properties":{"ChangeMode":{"type":"string","x-example":"restart"},"ChangeSignal":{"type":"string","x-example":""},"Env":{"type":"boolean","x-example":"true"},"Policies":{"type":"array","items":{"type":"string"},"x-example":"[\"policy-name\"]"}}},"Checks":{"description":"Model for Checks","required":["Args"],"properties":{"Args":{"type":"string","x-example":""},"Command":{"type":"string","x-example":""},"Id":{"type":"string","x-example":""},"Interval":{"type":"integer","format":"int32","x-example":"10000000000"},"Name":{"type":"string","x-example":"alive"},"Path":{"type":"string","x-example":""},"Protocol":{"type":"string","x-example":""},"Timeout":{"type":"integer","format":"int32","x-example":"2000000000"},"Type":{"type":"string","x-example":"tcp"}}},"Env":{"description":"Model for Env","required":["baz"],"properties":{"baz":{"type":"string","x-example":"pipe"},"foo":{"type":"string","x-example":"bar"}}},"PortMap":{"description":"Model for PortMap","required":["db"],"properties":{"db":{"type":"integer","format":"int32","x-example":"6379"}}},"Jobs":{"description":"Model for Jobs","required":["CreateIndex"],"properties":{"CreateIndex":{"type":"integer","format":"int32","x-example":"14"},"ID":{"type":"string","x-example":"binstore-storagelocker"},"ModifyIndex":{"type":"integer","format":"int32","x-example":"14"},"Name":{"type":"string","x-example":"binstore-storagelocker"},"Priority":{"type":"integer","format":"int32","x-example":"50"},"Status":{"type":"string","x-example":""},"StatusDescription":{"type":"string","x-example":""},"Type":{"type":"string","x-example":"service"}}}},"securityDefinitions":{},"security":[],"tags":[{"name":"Job","description":"Operations about Job"},{"name":"Jobs","description":"Operations about Jobs"}]}